version: 2.1

workflows:
  version: 2
  build-and-test:
    jobs:
      - build-and-test

jobs:
  build-and-test:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          DB_HOST: localhost
          DB_PORT: 3307
          DB_NAME: calidad
          DB_USER: root
          DB_PASSWORD: 123456

    steps:
      - checkout

      - run:
          name: Install MySQL
          command: |
            docker run -d --name mysql-container -p 3307:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql:5.7
            echo "Waiting for MySQL to start..."
            sleep 10
            echo "MySQL started."

            mysql -h localhost -P 3307 -u root -p123456 -e "CREATE DATABASE calidad;"

            # Python code to process XML and generate SQL statements
            python3 - <<EOF
            import xml.etree.ElementTree as ET
            
            xml_data = '''<?xml version="1.0" encoding="UTF-8"?>
            <dataset>
                <Alumno id="1" nombre="alumno1" apellido="apellido1" email="hola1@hola.com" />
                <Alumno id="2" nombre="alumno2" apellido="apellido2" email="hola2@hola.com" />
                <Alumno id="3" nombre="alumno3" apellido="apellido3" email="hola3@hola.com" />
            </dataset>'''
            
            root = ET.fromstring(xml_data)
            for alumno in root.findall('Alumno'):
                id = alumno.get('id')
                nombre = alumno.get('nombre')
                apellido = alumno.get('apellido')
                email = alumno.get('email')
                sql = f"INSERT INTO Alumnos (id, nombre, apellido, email) VALUES ('{id}', '{nombre}', '{apellido}', '{email}');"
                print(sql)
            EOF

            mysql -h localhost -P 3307 -u root -p123456 calidad < src/resources/iniDB.sql

      - run:
          name: Configure MySQL
          command: |
            echo "Waiting for MySQL to start..."
            while ! mysqladmin ping -h $DB_HOST -P $DB_PORT --silent; do sleep 1; done
            echo "MySQL started."

            mysql -h $DB_HOST -P $DB_PORT -u $DB_USER -p$DB_PASSWORD -e "CREATE DATABASE $DB_NAME;"
            mysql -h $DB_HOST -P $DB_PORT -u $DB_USER -p$DB_PASSWORD $DB_NAME < src/resources/iniDB.sql

      - run:
          name: Run Tests
          command: |
            ./gradlew test
